# https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html

[build-system]
build-backend = "flit_core.buildapi"
requires = ["flit_core >=3.2,<4"]

[project]
authors = [{name = "gdsfactory community", email = "contact@gdsfactory.com"}]
classifiers = [
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Operating System :: OS Independent"
]
dependencies = [
  "flatdict",
  "gdstk<0.10",
  "jinja2<4",
  "loguru<1",
  "matplotlib<4",
  "numpy<2",
  "omegaconf<3",
  "orjson<4",
  "pandas<3",
  "pydantic>=2,<2.6",
  "pydantic-settings<3",
  "pydantic-extra-types<3",
  "pyyaml",
  "qrcode",
  "rectpack<1",
  "rich<14",
  "scipy<2",
  "shapely<3",
  "toolz<1",
  "types-PyYAML",
  "typer<1",
  "watchdog<4"
]
description = "python library to generate GDS layouts"
keywords = ["eda", "photonics", "python"]
license = {file = "LICENSE"}
name = "gdsfactory"
readme = "README.md"
requires-python = ">=3.10"
version = "7.8.18"

[project.optional-dependencies]
cad = [
  "freetype-py",
  "ipycytoscape",
  "ipyevents",
  "ipykernel",
  "ipympl",
  "ipytree",
  "ipywidgets",
  "jupytext",
  "kweb>=1.1.9,<1.2",
  "kfactory[git,ipy]>=0.9.1,<0.12",
  "mapbox_earcut",
  "networkx",
  "pyglet<2",
  "scikit-image",
  "trimesh"
]
dev = [
  "ipykernel",
  "jsondiff",
  "pre-commit",
  "pylsp-mypy",
  "pytest",
  "pytest-cov",
  "pytest_regressions",
  "types-PyYAML",
  "types-cachetools",
  "towncrier"
]
docs = [
  "autodoc_pydantic>=2.0.1,<3",
  "jupytext",
  "jupyter-book>=0.15.1,<0.16",
  "plotly"
]
full = [
  "gplugins[devsim,femwell,gmsh,meow,meshwell,ray,sax,schematic,tidy3d]"
]
maintainer = [
  "black>=21",
  "doc8",
  "xdoctest",
  "mypy",
  "tbump",
  "autotyping"
]

[project.scripts]
gf = "gdsfactory.cli:app"

[tool.black]
exclude = '''  # Specify the files/dirs that should be ignored by the black formatter
/(
    \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | env
    | _build
    | buck-out
    | build
    | dist
 )/
'''
include = '\.pyi?$'
line-length = 88
target-version = ['py310']

[tool.codespell]
ignore-words-list = "te, te/tm, te, ba, fpr, fpr_spacing, ro, nd, donot, schem"

[tool.mypy]
python_version = "3.10"
strict = true

[tool.pylsp-mypy]
enabled = true
live_mode = true
strict = true

[tool.pytest.ini_options]
# addopts = --tb=no
addopts = '--tb=short --ignore=gdsfactory/schematic_editor.py --ignore=gdsfactory/klayout_tech.py --ignore=gdsfactory/geometry/maskprep_flat.py --ignore=gdsfactory/fill_klayout.py'
datadir = "test-data-regression"
norecursedirs = [
  "gdsfactory/samples/notebooks",
  "gdsfactory/geometry",
  "gdsfactory/plugins",
  "gdsfactory/simulation",
  "extra",
  "gdsfactory/watch.py",
  "gdsfactory/schematic_editor.py",
  "gdsfactory/generic_tech/klayout",
  "docs"
]
python_files = ["gdsfactory/*.py", "tests/*.py"]
testpaths = ["gdsfactory/", "tests"]

[tool.ruff]
extend-exclude = ['docs/notebooks/']
fix = true
ignore = [
  "E501",  # line too long, handled by black
  "B008",  # do not perform function calls in argument defaults
  "C901",  # too complex
  "B905",  # `zip()` without an explicit `strict=` parameter
  "C408",  # C408 Unnecessary `dict` call (rewrite as a literal)
  "B904",
  "B028"  # stacklevel
]
select = [
  "E",  # pycodestyle errors
  "W",  # pycodestyle warnings
  "F",  # pyflakes
  "I",  # isort
  "C",  # flake8-comprehensions
  "B",  # flake8-bugbear
  "T10",  # flake8-debugger
  "UP"
]

[tool.ruff.per-file-ignores]
"docs/notebooks/*.py" = ["F821", 'E402', 'F405', 'F403']
"gdsfactory/typings.py" = ["UP035"]

[tool.setuptools.package-data]
mypkg = [
  "*.gds",
  "*.lym",
  "*.lyp",
  "*.lyt",
  "*.csv",
  "*.yaml",
  "*.md",
  "LICENSE"
]

[tool.setuptools.packages]
find = {}

[tool.tbump]

[[tool.tbump.before_commit]]
cmd = "towncrier build --yes --version {new_version}"
name = "create & check changelog"

[[tool.tbump.before_commit]]
cmd = "git add CHANGELOG.md"
name = "create & check changelog"

[[tool.tbump.before_commit]]
cmd = "grep -q -F {new_version} CHANGELOG.md"
name = "create & check changelog"

[[tool.tbump.file]]
src = "README.md"

[[tool.tbump.file]]
src = "pyproject.toml"

[[tool.tbump.file]]
src = "gdsfactory/config.py"

[[tool.tbump.file]]
src = "docs/notebooks/08_pdk.py"

[[tool.tbump.file]]
src = "gdsfactory/generic_tech/klayout/grain.xml"

[[tool.tbump.file]]
src = "gdsfactory/generic_tech/klayout/pymacros/set_menus.lym"

[[tool.tbump.file]]
src = ".devcontainer/Dockerfile"

[tool.tbump.git]
message_template = "Bump to {new_version}"
tag_template = "v{new_version}"

[tool.tbump.version]
current = "7.8.18"
regex = '''
  (?P<major>\d+)
  \.
  (?P<minor>\d+)
  \.
  (?P<patch>\d+)
  '''

[tool.towncrier]
directory = ".changelog.d"
filename = "CHANGELOG.md"
issue_format = "[#{issue}](https://github.com/gdsfactory/gdsfactory/issues/{issue})"
package = "gdsfactory"
start_string = "<!-- towncrier release notes start -->\n"
template = ".changelog.d/changelog_template.jinja"
title_format = "## [{version}](https://github.com/gdsfactory/gdsfactory/releases/tag/v{version}) - {project_date}"
underlines = ["", "", ""]

[[tool.towncrier.type]]
directory = "security"
name = "Security"
showcontent = true

[[tool.towncrier.type]]
directory = "removed"
name = "Removed"
showcontent = true

[[tool.towncrier.type]]
directory = "deprecated"
name = "Deprecated"
showcontent = true

[[tool.towncrier.type]]
directory = "added"
name = "Added"
showcontent = true

[[tool.towncrier.type]]
directory = "changed"
name = "Changed"
showcontent = true

[[tool.towncrier.type]]
directory = "fixed"
name = "Fixed"
showcontent = true
